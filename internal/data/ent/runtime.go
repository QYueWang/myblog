// Code generated by ent, DO NOT EDIT.

package ent

import (
	"myblog/internal/data/ent/article"
	"myblog/internal/data/ent/comment"
	"myblog/internal/data/ent/schema"
	"myblog/internal/data/ent/tag"
	"myblog/internal/data/ent/user"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	articleFields := schema.Article{}.Fields()
	_ = articleFields
	// articleDescTitle is the schema descriptor for title field.
	articleDescTitle := articleFields[1].Descriptor()
	// article.TitleValidator is a validator for the "title" field. It is called by the builders before save.
	article.TitleValidator = func() func(string) error {
		validators := articleDescTitle.Validators
		fns := [...]func(string) error{
			validators[0].(func(string) error),
			validators[1].(func(string) error),
		}
		return func(title string) error {
			for _, fn := range fns {
				if err := fn(title); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// articleDescCreateAt is the schema descriptor for create_at field.
	articleDescCreateAt := articleFields[3].Descriptor()
	// article.DefaultCreateAt holds the default value on creation for the create_at field.
	article.DefaultCreateAt = articleDescCreateAt.Default.(time.Time)
	// articleDescUpdateAt is the schema descriptor for update_at field.
	articleDescUpdateAt := articleFields[4].Descriptor()
	// article.DefaultUpdateAt holds the default value on creation for the update_at field.
	article.DefaultUpdateAt = articleDescUpdateAt.Default.(time.Time)
	// articleDescDeleteAt is the schema descriptor for delete_at field.
	articleDescDeleteAt := articleFields[5].Descriptor()
	// article.DefaultDeleteAt holds the default value on creation for the delete_at field.
	article.DefaultDeleteAt = articleDescDeleteAt.Default.(time.Time)
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescCreateAt is the schema descriptor for create_at field.
	commentDescCreateAt := commentFields[3].Descriptor()
	// comment.DefaultCreateAt holds the default value on creation for the create_at field.
	comment.DefaultCreateAt = commentDescCreateAt.Default.(time.Time)
	// commentDescUpdateAt is the schema descriptor for update_at field.
	commentDescUpdateAt := commentFields[4].Descriptor()
	// comment.DefaultUpdateAt holds the default value on creation for the update_at field.
	comment.DefaultUpdateAt = commentDescUpdateAt.Default.(time.Time)
	// commentDescDeleteAt is the schema descriptor for delete_at field.
	commentDescDeleteAt := commentFields[5].Descriptor()
	// comment.DefaultDeleteAt holds the default value on creation for the delete_at field.
	comment.DefaultDeleteAt = commentDescDeleteAt.Default.(time.Time)
	tagFields := schema.Tag{}.Fields()
	_ = tagFields
	// tagDescCreateAt is the schema descriptor for create_at field.
	tagDescCreateAt := tagFields[2].Descriptor()
	// tag.DefaultCreateAt holds the default value on creation for the create_at field.
	tag.DefaultCreateAt = tagDescCreateAt.Default.(time.Time)
	// tagDescUpdateAt is the schema descriptor for update_at field.
	tagDescUpdateAt := tagFields[3].Descriptor()
	// tag.DefaultUpdateAt holds the default value on creation for the update_at field.
	tag.DefaultUpdateAt = tagDescUpdateAt.Default.(time.Time)
	// tagDescDeleteAt is the schema descriptor for delete_at field.
	tagDescDeleteAt := tagFields[4].Descriptor()
	// tag.DefaultDeleteAt holds the default value on creation for the delete_at field.
	tag.DefaultDeleteAt = tagDescDeleteAt.Default.(time.Time)
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreateAt is the schema descriptor for create_at field.
	userDescCreateAt := userFields[4].Descriptor()
	// user.DefaultCreateAt holds the default value on creation for the create_at field.
	user.DefaultCreateAt = userDescCreateAt.Default.(time.Time)
	// userDescUpdateAt is the schema descriptor for update_at field.
	userDescUpdateAt := userFields[5].Descriptor()
	// user.DefaultUpdateAt holds the default value on creation for the update_at field.
	user.DefaultUpdateAt = userDescUpdateAt.Default.(time.Time)
	// userDescDeleteAt is the schema descriptor for delete_at field.
	userDescDeleteAt := userFields[6].Descriptor()
	// user.DefaultDeleteAt holds the default value on creation for the delete_at field.
	user.DefaultDeleteAt = userDescDeleteAt.Default.(time.Time)
}
