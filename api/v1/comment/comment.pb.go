// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc1
// source: api/v1/comment/comment.proto

package comment

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_api_v1_comment_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_comment_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_api_v1_comment_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Article       string                 `protobuf:"bytes,2,opt,name=article,proto3" json:"article,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_api_v1_comment_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_comment_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_comment_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentRequest) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

type CreateCommentReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentReply) Reset() {
	*x = CreateCommentReply{}
	mi := &file_api_v1_comment_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentReply) ProtoMessage() {}

func (x *CreateCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_comment_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentReply.ProtoReflect.Descriptor instead.
func (*CreateCommentReply) Descriptor() ([]byte, []int) {
	return file_api_v1_comment_comment_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommentReply) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_api_v1_comment_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_comment_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_comment_comment_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCommentReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentReply) Reset() {
	*x = DeleteCommentReply{}
	mi := &file_api_v1_comment_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentReply) ProtoMessage() {}

func (x *DeleteCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_comment_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentReply.ProtoReflect.Descriptor instead.
func (*DeleteCommentReply) Descriptor() ([]byte, []int) {
	return file_api_v1_comment_comment_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCommentReply) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Article       string                 `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRequest) Reset() {
	*x = GetCommentRequest{}
	mi := &file_api_v1_comment_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRequest) ProtoMessage() {}

func (x *GetCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_comment_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_v1_comment_comment_proto_rawDescGZIP(), []int{5}
}

func (x *GetCommentRequest) GetArticle() string {
	if x != nil {
		return x.Article
	}
	return ""
}

type GetCommentReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentReply) Reset() {
	*x = GetCommentReply{}
	mi := &file_api_v1_comment_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentReply) ProtoMessage() {}

func (x *GetCommentReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_v1_comment_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentReply.ProtoReflect.Descriptor instead.
func (*GetCommentReply) Descriptor() ([]byte, []int) {
	return file_api_v1_comment_comment_proto_rawDescGZIP(), []int{6}
}

func (x *GetCommentReply) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

var File_api_v1_comment_comment_proto protoreflect.FileDescriptor

const file_api_v1_comment_comment_proto_rawDesc = "" +
	"\n" +
	"\x1capi/v1/comment/comment.proto\x12\x0eapi.v1.comment\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"G\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\"J\n" +
	"\x14CreateCommentRequest\x12\x18\n" +
	"\acontent\x18\x01 \x01(\tR\acontent\x12\x18\n" +
	"\aarticle\x18\x02 \x01(\tR\aarticle\"I\n" +
	"\x12CreateCommentReply\x123\n" +
	"\bcomments\x18\x01 \x03(\v2\x17.api.v1.comment.CommentR\bcomments\"&\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"I\n" +
	"\x12DeleteCommentReply\x123\n" +
	"\bcomments\x18\x01 \x03(\v2\x17.api.v1.comment.CommentR\bcomments\"-\n" +
	"\x11GetCommentRequest\x12\x18\n" +
	"\aarticle\x18\x01 \x01(\tR\aarticle\"F\n" +
	"\x0fGetCommentReply\x123\n" +
	"\bcomments\x18\x01 \x03(\v2\x17.api.v1.comment.CommentR\bcomments2\xed\x02\n" +
	"\x0eCommentService\x12r\n" +
	"\rCreateComment\x12$.api.v1.comment.CreateCommentRequest\x1a\".api.v1.comment.CreateCommentReply\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/api/comment\x12t\n" +
	"\rDeleteComment\x12$.api.v1.comment.DeleteCommentRequest\x1a\".api.v1.comment.DeleteCommentReply\"\x19\x82\xd3\xe4\x93\x02\x13*\x11/api/comment/{id}\x12q\n" +
	"\vGetComments\x12!.api.v1.comment.GetCommentRequest\x1a\x1f.api.v1.comment.GetCommentReply\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/api/comment/{article}B\x1fZ\x1dmyblog/api/v1/comment;commentb\x06proto3"

var (
	file_api_v1_comment_comment_proto_rawDescOnce sync.Once
	file_api_v1_comment_comment_proto_rawDescData []byte
)

func file_api_v1_comment_comment_proto_rawDescGZIP() []byte {
	file_api_v1_comment_comment_proto_rawDescOnce.Do(func() {
		file_api_v1_comment_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_v1_comment_comment_proto_rawDesc), len(file_api_v1_comment_comment_proto_rawDesc)))
	})
	return file_api_v1_comment_comment_proto_rawDescData
}

var file_api_v1_comment_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_api_v1_comment_comment_proto_goTypes = []any{
	(*Comment)(nil),              // 0: api.v1.comment.Comment
	(*CreateCommentRequest)(nil), // 1: api.v1.comment.CreateCommentRequest
	(*CreateCommentReply)(nil),   // 2: api.v1.comment.CreateCommentReply
	(*DeleteCommentRequest)(nil), // 3: api.v1.comment.DeleteCommentRequest
	(*DeleteCommentReply)(nil),   // 4: api.v1.comment.DeleteCommentReply
	(*GetCommentRequest)(nil),    // 5: api.v1.comment.GetCommentRequest
	(*GetCommentReply)(nil),      // 6: api.v1.comment.GetCommentReply
}
var file_api_v1_comment_comment_proto_depIdxs = []int32{
	0, // 0: api.v1.comment.CreateCommentReply.comments:type_name -> api.v1.comment.Comment
	0, // 1: api.v1.comment.DeleteCommentReply.comments:type_name -> api.v1.comment.Comment
	0, // 2: api.v1.comment.GetCommentReply.comments:type_name -> api.v1.comment.Comment
	1, // 3: api.v1.comment.CommentService.CreateComment:input_type -> api.v1.comment.CreateCommentRequest
	3, // 4: api.v1.comment.CommentService.DeleteComment:input_type -> api.v1.comment.DeleteCommentRequest
	5, // 5: api.v1.comment.CommentService.GetComments:input_type -> api.v1.comment.GetCommentRequest
	2, // 6: api.v1.comment.CommentService.CreateComment:output_type -> api.v1.comment.CreateCommentReply
	4, // 7: api.v1.comment.CommentService.DeleteComment:output_type -> api.v1.comment.DeleteCommentReply
	6, // 8: api.v1.comment.CommentService.GetComments:output_type -> api.v1.comment.GetCommentReply
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_api_v1_comment_comment_proto_init() }
func file_api_v1_comment_comment_proto_init() {
	if File_api_v1_comment_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_v1_comment_comment_proto_rawDesc), len(file_api_v1_comment_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_v1_comment_comment_proto_goTypes,
		DependencyIndexes: file_api_v1_comment_comment_proto_depIdxs,
		MessageInfos:      file_api_v1_comment_comment_proto_msgTypes,
	}.Build()
	File_api_v1_comment_comment_proto = out.File
	file_api_v1_comment_comment_proto_goTypes = nil
	file_api_v1_comment_comment_proto_depIdxs = nil
}
